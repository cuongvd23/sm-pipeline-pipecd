name: distribute/pipeline

on:
  push:
    tags:
      - "v*"
    paths:
      - "pipeline/**"
      - "pkg/aws/sagemaker.py"
      - "run_pipeline.py"

env:
  IMAGE_NAME: sm-pipeline-pipecd

jobs:
  container-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      version: ${{ steps.meta.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}

      - name: Build and push server container image
        uses: docker/build-push-action@v6
        with:
          context: .
          provenance: false
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: pipeline/Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max

  trigger-deploy:
    runs-on: ubuntu-latest
    needs: [container-images]
    outputs:
        CONTINUE_JOBS: ${{ steps.trigger-deploy.outputs.CONTINUE_JOBS }}
    steps:
      - name: trigger-deploy
        id: trigger-deploy
        uses: benhamiltonpro/manual-trigger@v1
        with:
          RUN_NAME: "send-deploy-event"

  send-deploy-event:
    runs-on: ubuntu-latest
    needs: [container-images, trigger-deploy]
    if: ${{ needs.trigger-deploy.outputs.CONTINUE_JOBS == 'true' }}
    env:
      version: ${{ needs.container-images.outputs.version }}
    steps:
      - uses: pipe-cd/actions-event-register@v1
        with:
          api-address: ${{ secrets.PIPECD_API_ADDRESS }}
          api-key: ${{ secrets.PIPECD_API_KEY }}
          event-name: sm-pipeline-pipecd-image-update
          labels: app=sm-pipeline-pipecd
          data: ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.version }}
          pipectl-version: v0.50.0
